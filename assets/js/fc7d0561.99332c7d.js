"use strict";(self.webpackChunkmetapage_docs=self.webpackChunkmetapage_docs||[]).push([[2889],{28453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>c});var n=t(96540);const a={},o=n.createContext(a);function r(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(o.Provider,{value:s},e.children)}},34062:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/websocket-streaming.1b601857-9bb5-8079-893c-d9e44657029c-d348309634c458769e54efe07d765fc1.png"},72213:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>r,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Concepts/websocket-streaming","title":"Websocket streaming","description":"1b6018579bb580819242c7a781c85a95}","source":"@site/docs/Concepts/websocket-streaming.mdx","sourceDirName":"Concepts","slug":"/websocket-streaming","permalink":"/docs/websocket-streaming","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"title":"Websocket streaming","sidebar_position":11,"slug":"/websocket-streaming"},"sidebar":"tutorialSidebar","previous":{"title":"Inject URL parameters","permalink":"/docs/inject-url-parameters"},"next":{"title":"FAIR Principles","permalink":"/docs/fair-principles"}}');var a=t(74848),o=t(28453);const r={title:"Websocket streaming",sidebar_position:11,slug:"/websocket-streaming"},c="Broadcast websocket stream {#1b6018579bb580819242c7a781c85a95}",i={},d=[{value:"Code examples and websocket address",id:"1b6018579bb580bb8770ddb535bde292",level:2},{value:"How it works",id:"1b6018579bb580eb9636ef68838254bf",level:2}];function l(e){const s={h1:"h1",h2:"h2",header:"header",img:"img",p:"p",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"1b6018579bb580819242c7a781c85a95",children:"Broadcast websocket stream"})}),"\n",(0,a.jsx)(s.p,{children:"Every metapage has a unique websocket broadcast channel where all metaframes can connect and broadcast and listen for messages. For frontend metaframes connecting only on in the browser, this is not particularly useful. However it\u2019s much more useful to for backend containers to have a real-time bidirectional channel to other containers and frontend metaframes. This allows seamless streaming connections to any set of frontend and backend container components."}),"\n",(0,a.jsx)(s.p,{children:"Example metapage showing multiple containers and javascript frames sending and receiving broadcast messages. If you look at the connections you\u2019ll notice that only two metaframes are connected on the frontend: all other communication is happening via the shared websocket channel:"}),"\n",(0,a.jsx)("iframe",{scrolling:"yes",allow:"fullscreen *; camera *; speaker *;",style:{width:"100%",height:"370px",overflow:"hidden"},src:"https://metapage.io/dion/Websocket-streaming-between-containers-and-browser-ec3e48694f66441a9eec9a5c5c842810/embed-frame?frame=listen+to+socket&minimal=true&mermaid=false&filesystem=false&hideOptions=false&hideBorders=false"}),"\n",(0,a.jsx)(s.h2,{id:"1b6018579bb580bb8770ddb535bde292",children:"Code examples and websocket address"}),"\n",(0,a.jsxs)("div",{className:"custom-docunotion-row",children:[(0,a.jsxs)("div",{className:"custom-docunotion-row-cell",children:[(0,a.jsxs)(s.p,{children:["Go to ",(0,a.jsx)("code",{children:"\u22ee"})," menu then ",(0,a.jsx)("code",{children:"Settings"}),". Scroll down to the ",(0,a.jsx)("code",{children:"Websocket Channel"})," section.\n",(0,a.jsx)("p",{children:"\xa0\xa0"})]}),(0,a.jsx)("br",{})]}),(0,a.jsx)("div",{className:"custom-docunotion-row-cell",children:(0,a.jsx)(s.p,{children:(0,a.jsx)(s.img,{src:t(34062).A+"",width:"484",height:"414"})})})]}),"\n",(0,a.jsx)(s.p,{children:"Here  you can copy the websocket address, or code examples for accessing the websocket URL"}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.img,{src:t(73164).A+"",width:"1270",height:"1004"})}),"\n",(0,a.jsx)(s.h2,{id:"1b6018579bb580eb9636ef68838254bf",children:"How it works"}),"\n",(0,a.jsx)(s.p,{children:"Every metapage generates an unguessable URL and injects it at runtime into the metaframes. This URL can be regenerated instantly in the metapage settings, so you can share the URL to connect different metapages, but also disconnect sharing. The channel URL is not shared to others who also do not have access to the underlying metapage."}),"\n",(0,a.jsx)(s.p,{children:"The URL points to a websocket router system that broadcasts all messages to all listeners. There is a limit on the message size, the system is meant for low-latency small messages, sending large file blobs is currently not yet supported."})]})}function m(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},73164:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/websocket-streaming.1b601857-9bb5-80ae-8179-dfd37611f4ee-6a6c2277ad9f5be681da804681b294bf.png"}}]);