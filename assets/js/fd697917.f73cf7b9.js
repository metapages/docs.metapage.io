"use strict";(self.webpackChunkmetapage_docs=self.webpackChunkmetapage_docs||[]).push([[1330],{18181:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Containers/container-cli-reference","title":"worker cli reference","description":"199018579bb580eabec7f8348c474287}","source":"@site/docs/Containers/container-cli-reference.mdx","sourceDirName":"Containers","slug":"/container-cli-reference","permalink":"/docs/container-cli-reference","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"worker cli reference","sidebar_position":3,"slug":"/container-cli-reference"},"sidebar":"tutorialSidebar","previous":{"title":"local","permalink":"/docs/container-local-mode"},"next":{"title":"github refs in URLs","permalink":"/docs/git-refs-in-urls"}}');var c=r(74848),s=r(28453);const i={title:"worker cli reference",sidebar_position:3,slug:"/container-cli-reference"},o="Command line reference for  {#199018579bb580eabec7f8348c474287}",l={},d=[];function a(e){const n={a:"a",code:"code",h1:"h1",header:"header",mermaid:"mermaid",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"199018579bb580eabec7f8348c474287",children:"Command line reference for"})}),"\n",(0,c.jsx)(n.h1,{id:"199018579bb580c8a23cea38b29e5b58",children:"Env vars"}),"\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"Env var"}),(0,c.jsx)(n.th,{children:"cli command example"}),(0,c.jsx)(n.th,{children:"Description"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"METAPAGE_IO_CPUS"}),(0,c.jsx)(n.td,{children:"\u2014cpus 1"}),(0,c.jsx)(n.td,{children:"The max number CPU cores the worker will claim for jobs"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"METAPAGE_IO_GPUS"}),(0,c.jsx)(n.td,{children:"\u2014gpus 1"}),(0,c.jsx)(n.td,{children:"The max number GPUs the worker will claim for jobs"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"METAPAGE_IO_MODE"}),(0,c.jsxs)(n.td,{children:["\u2014mode ",(0,c.jsx)(n.code,{children:"local"})]}),(0,c.jsxs)(n.td,{children:["Default: ",(0,c.jsx)(n.code,{children:"remote"}),". ",(0,c.jsx)(n.code,{children:"remote"})," mode means the queue is in the cloud. ",(0,c.jsx)(n.code,{children:"local"})," means all compute runs on the local machine, no scaling possible, but does not require any external API."]})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"METAPAGE_IO_QUEUE"}),(0,c.jsx)(n.td,{}),(0,c.jsx)(n.td,{children:"The queue the worker connects to for jobs to complete"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"METAPAGE_IO_PORT"}),(0,c.jsx)(n.td,{children:"\u2014port 8000"}),(0,c.jsxs)(n.td,{children:["Default: 8000. When in ",(0,c.jsx)(n.code,{children:"--mode local"}),", this is the port the worker uses to connect."]})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"METAPAGE_IO_API_ADDRESS"}),(0,c.jsxs)(n.td,{children:["\u2014api-address ",(0,c.jsx)(n.a,{href:"https://container.mtfm.io",children:"https://container.mtfm.io"})]}),(0,c.jsx)(n.td,{children:"Advanced or development use only. Allows connecting the worker to a different API queue server"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"METAPAGE_IO_GENERATE_WORKER_ID"}),(0,c.jsx)(n.td,{children:"None"}),(0,c.jsxs)(n.td,{children:["If set to ",(0,c.jsx)(n.code,{children:"true"})," then the worker will always generate a new unique id on every start."]})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"METAPAGE_IO_WORKER_RUN_STANDALONE"}),(0,c.jsx)(n.td,{children:"None"}),(0,c.jsx)(n.td,{children:"If set to true, will start a docker daemon process as a subprocess."})]})]})]}),"\n",(0,c.jsx)(n.mermaid,{value:'graph LR\n  containers["Metaframe: Containers"]\n  local["Local mode"]\n  remote["Remote mode"]\n  gitrefs["git refs in URLs"]\n  cli["cli reference"]\n\n  containers --\x3e remote  \n  containers --\x3e local\n  containers --\x3e gitrefs\n  remote --\x3e cli\n  local --\x3e cli\n  click containers "/docs/containers"\n  click remote "/docs/container-remote-mode"\n  click local "/docs/container-local-mode"\n  click gitrefs "/docs/git-refs-in-urls"\n  click cli "/docs/container-cli-reference"\n  style cli fill:#fff,stroke:#999999,stroke-width:2px,color:#000'})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(96540);const c={},s=t.createContext(c);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);