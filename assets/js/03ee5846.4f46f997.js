"use strict";(self.webpackChunkmetapage_docs=self.webpackChunkmetapage_docs||[]).push([[631],{28453:(l,e,V)=>{V.d(e,{R:()=>i,x:()=>t});var d=V(96540);const n={},U=d.createContext(n);function i(l){const e=d.useContext(U);return d.useMemo((function(){return"function"==typeof l?l(e):{...e,...l}}),[e,l])}function t(l){let e;return e=l.disableParentContext?"function"==typeof l.components?l.components(n):l.components||n:i(l.components),d.createElement(U.Provider,{value:e},l.children)}},35571:(l,e,V)=>{V.r(e),V.d(e,{assets:()=>p,contentTitle:()=>t,default:()=>M,frontMatter:()=>i,metadata:()=>d,toc:()=>a});const d=JSON.parse('{"id":"Help/Pyodide-(Python)","title":"Pyodide (Python)","description":"fd68fd8eccd741cd91d08d6af8b17a8d}","source":"@site/docs/Help/Pyodide-(Python).mdx","sourceDirName":"Help","slug":"/1a601857-9bb5-8036-bc5e-cb1478e4afd6","permalink":"/docs/1a601857-9bb5-8036-bc5e-cb1478e4afd6","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Pyodide (Python)","sidebar_position":4,"slug":"/1a601857-9bb5-8036-bc5e-cb1478e4afd6"},"sidebar":"tutorialSidebar","previous":{"title":"Error- missing git-sha or ref","permalink":"/docs/error-missing-git-sha"}}');var n=V(74848),U=V(28453);const i={title:"Pyodide (Python)",sidebar_position:4,slug:"/1a601857-9bb5-8036-bc5e-cb1478e4afd6"},t="Python metaframe (via pyiodide) {#fd68fd8eccd741cd91d08d6af8b17a8d}",p={},a=[{value:"Configuration + Inputs/Outputs",id:"3194da5a15ad40749da1a3737a8ec430",level:2},{value:"Useful code snippets",id:"e7936348a03d4111a7176f3a0f05033b",level:2},{value:"Get the (current) metaframe inputs",id:"6b484ec540b544a0aac3d8a86fe99ad2",level:3},{value:"Listen to new metaframe inputs",id:"b3946ce86e994cf5bc6b14382b79151c",level:3},{value:"Unload/cleanup/dispose",id:"e2aaa421bd2548e983dcd777d8e4103b",level:3},{value:"Logging to the main div",id:"f7f1777153f04b0abc00581ebf1518db",level:3},{value:"Advanced",id:"e7d6bf29bb864589a271e90de2e75fa4",level:2}];function s(l){const e={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,U.R)(),...l.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.header,{children:(0,n.jsxs)(e.h1,{id:"fd68fd8eccd741cd91d08d6af8b17a8d",children:["Python ",(0,n.jsx)(e.a,{href:"https://docs.metapage.io/docs",children:"metaframe"})," (via pyiodide)"]})}),"\n",(0,n.jsx)(e.mermaid,{value:"graph LR\n    classDef mpColor fill:#87d0ff,stroke:#87d0ff,stroke-width:2px;\n    subgraph metapage\n    direction LR\n        left1(upstream metaframe) --\x3e|inputs| M(python code):::mpColor\n        M --\x3e |outputs| right1(downstream metaframe)\n    end\n\n"}),"\n",(0,n.jsx)(e.p,{children:"Examples:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://app.metapages.org/#?definition=",children:"create matplotlib plots"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://app.metapage.io/dion/py.mtfm.io-test/view",children:"inputs/outputs"})}),"\n",(0,n.jsx)(e.li,{children:"Run python code entire in the browser, and connect to other metaframes"}),"\n",(0,n.jsx)(e.li,{children:"Edit python code directly in the frame"}),"\n",(0,n.jsxs)(e.li,{children:["All code and configuration is stored in the URL","\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"shareable and durable"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(e.h2,{id:"3194da5a15ad40749da1a3737a8ec430",children:"Configuration + Inputs/Outputs"}),"\n",(0,n.jsx)(e.p,{children:"There are two (metaframe) modes (set in \u2699\ufe0f Options):"}),"\n",(0,n.jsxs)(e.ol,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:"\u2705 Re-run python code on new inputs"}),": Anytime new metaframe inputs arrive, restart the script. Any files in ",(0,n.jsx)(e.code,{children:"/outputs"})," are copied and send as metaframe outputs. If the file suffix is recognized (e.g. ",(0,n.jsx)(e.code,{children:".js"}),", ",(0,n.jsx)(e.code,{children:".json"}),", ",(0,n.jsx)(e.code,{children:".py"}),") then it will be sent as a string (or directly as JSON if ending in ",(0,n.jsx)(e.code,{children:".json"}),"), otherwise it will be send as an ArrayBuffer.","\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["Inputs ",(0,n.jsx)(e.strong,{children:"are"})," copied as files"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:"\u274c Re-run python code on new inputs"}),": Run the script once, the script is responsible for listening to inputs by calling the metaframe object (see examples below).","\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["Inputs are ",(0,n.jsx)(e.strong,{children:"not"})," copied as files"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:["The use case of copying inputs and outputs as files but *",(0,n.jsx)(e.em,{children:"not"})," re-running seems counterintuitive to me, let me know if you have this use case: ",(0,n.jsx)(e.a,{href:"https://github.com/metapages/metaframe-py/issues",children:"https://github.com/metapages/metaframe-py/issues"})]}),"\n",(0,n.jsx)(e.h2,{id:"e7936348a03d4111a7176f3a0f05033b",children:"Useful code snippets"}),"\n",(0,n.jsx)(e.h3,{id:"6b484ec540b544a0aac3d8a86fe99ad2",children:"Get the (current) metaframe inputs"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"from js import metaframe\n\ninputs = metaframe.getInputs().as_object_map()\n\nfor key in inputs:\n    print(key)\n    print(inputs[key])\n    # Do something with the value\n\n"})}),"\n",(0,n.jsx)(e.h3,{id:"b3946ce86e994cf5bc6b14382b79151c",children:"Listen to new metaframe inputs"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"from pyodide.ffi import create_proxy\nfrom js import metaframe\n\ndef onInputs(*args):\n    print('got inputs in python:')\n    inputs = args[0].as_object_map()\n    for key in inputs:\n      print(key)\n\nonInputsProxy = create_proxy(onInputs)\ndisposer = metaframe.onInputs(onInputsProxy)\n# Call the disposer via the scriptUnload described next below\n\n\n"})}),"\n",(0,n.jsx)(e.h3,{id:"e2aaa421bd2548e983dcd777d8e4103b",children:"Unload/cleanup/dispose"}),"\n",(0,n.jsxs)(e.p,{children:["When iterating/editing, the python script is repeatedly run in the ",(0,n.jsx)(e.code,{children:"pyiodide"})," object. This can cause problems if proxied ",(0,n.jsx)(e.code,{children:"js <-> python"})," objects are not properly disposed."]}),"\n",(0,n.jsxs)(e.p,{children:["Before every new python script execution, (in javascript) if a ",(0,n.jsx)(e.code,{children:"window.scriptUnload"})," script exists, it is called. This is where you put your cleanup:"]}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"from pyodide.ffi import create_proxy\nfrom js import window\n\n# Put this at the end of your script:\ndef scriptUnload(*args):\n    print('unloading from python')\n    # Call your cleanup code here\nproxy_scriptUnload = create_proxy(scriptUnload)\nwindow.scriptUnload = proxy_scriptUnload\n\n"})}),"\n",(0,n.jsx)(e.h3,{id:"f7f1777153f04b0abc00581ebf1518db",children:"Logging to the main div"}),"\n",(0,n.jsx)(e.p,{children:"Some convenience functions:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-text",children:'\n# log is the same as logStderr\nfrom js import log, logStdout, logStderr\n\n# These functions only take a single string, no fancy formatting or multiple arguments\nlog("some string")\nlogStdout("some string")\nlogStderr("some error")\n\n'})}),"\n",(0,n.jsx)(e.h2,{id:"e7d6bf29bb864589a271e90de2e75fa4",children:"Advanced"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:["Testing, input/outputs, capabilities, development metapage:","\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://app.metapage.io/dion/py.mtfm.io-test/view",children:"https://app.metapage.io/dion/py.mtfm.io-test/view"})}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(e.li,{children:["Example metapage running python with inputs and outputs and plotting:","\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://app.metapage.io/dion/py.mtfm.io-example-01",children:"https://app.metapage.io/dion/py.mtfm.io-example-01"})}),"\n"]}),"\n"]}),"\n"]})]})}function M(l={}){const{wrapper:e}={...(0,U.R)(),...l.components};return e?(0,n.jsx)(e,{...l,children:(0,n.jsx)(s,{...l})}):s(l)}}}]);