"use strict";(self.webpackChunkmetapage_docs=self.webpackChunkmetapage_docs||[]).push([[1745],{7897:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var a=s(1527),i=s(3703);const n={title:"What is a metapage? What problems do they solve?",sidebar_position:1,slug:"/what-is-a-metapage"},r=void 0,o={id:"Guides/what-is-a-metapage",title:"What is a metapage? What problems do they solve?",description:"Write a good story",source:"@site/docs/Guides/what-is-a-metapage.mdx",sourceDirName:"Guides",slug:"/what-is-a-metapage",permalink:"/docs/what-is-a-metapage",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"What is a metapage? What problems do they solve?",sidebar_position:1,slug:"/what-is-a-metapage"},sidebar:"tutorialSidebar",previous:{title:"Guides",permalink:"/docs/guides"},next:{title:"Everything is a URL",permalink:"/docs/everything-is-a-url"}},c={},d=[];function l(e){const t={hr:"hr",mermaid:"mermaid",p:"p",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.mermaid,{value:'flowchart LR\n  what["What is a metapage"]\n\turlwebsites["URL contains config"]\n\tsims["sharable simulations"]\n\tdt["preserved through deep time"]\n\n\twhat --\x3e sims\n\turlwebsites --\x3e sims\n\tsims --\x3e dt\n  click what "/docs/what-is-a-metapage"\n  style what fill:#fff,stroke:#999999,stroke-width:2px,color:#000\n  click urlwebsites "/docs/url-configured-websites"\n  click sims "/docs/sharable-simulations"\n  click dt "/docs/internet-archive-url-configured-websites"\n\n\n\n\n'}),"\n",(0,a.jsx)(t.p,{children:"Write a good story"}),"\n",(0,a.jsx)(t.p,{children:"Right before a divider"}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.p,{children:"After the divider"}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.p,{children:"Another divider"})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},3703:(e,t,s)=>{s.d(t,{Z:()=>o,a:()=>r});var a=s(959);const i={},n=a.createContext(i);function r(e){const t=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(n.Provider,{value:t},e.children)}}}]);