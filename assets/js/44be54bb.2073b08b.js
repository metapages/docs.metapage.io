"use strict";(self.webpackChunkmetapage_docs=self.webpackChunkmetapage_docs||[]).push([[3411],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var a=t(96540);const s={},i=a.createContext(s);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:n},e.children)}},59301:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"Concepts/embed","title":"Embed metapages into your app","description":"This page is meant for developers, with some coding knowledge, or those who build web apps/sites","source":"@site/docs/Concepts/embed.mdx","sourceDirName":"Concepts","slug":"/embed","permalink":"/docs/embed","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Embed metapages into your app","sidebar_position":3,"slug":"/embed"},"sidebar":"tutorialSidebar","previous":{"title":"Embed metapages anywhere","permalink":"/docs/embed-anywhere"},"next":{"title":"Embed a metaframe in a React app","permalink":"/docs/embed-metaframe"}}');var s=t(74848),i=t(28453);const o={title:"Embed metapages into your app",sidebar_position:3,slug:"/embed"},r=void 0,d={},m=[{value:"Minimal HTML rendering a metapage in plain javascript",id:"25b018579bb580b594b3dabdd05cb551",level:2},{value:"<strong>Embed metapages in your site (links to code examples)</strong>",id:"4d58288979954add8d83b1f337c919b1",level:2},{value:"Links to code example",id:"0ba26708b1eb4296bab40fd139307271",level:2},{value:"Navigate Concepts",id:"1ae018579bb580c1a721e02051d78875",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"This page is meant for developers, with some coding knowledge, or those who build web apps/sites"})}),"\n",(0,s.jsx)(n.h2,{id:"25b018579bb580b594b3dabdd05cb551",children:"Minimal HTML rendering a metapage in plain javascript"}),"\n",(0,s.jsx)(n.p,{children:"Absolute minimal code needed:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import { renderMetapage } from \"https://cdn.jsdelivr.net/npm/@metapages/metapage@1.8.15\";\nawait renderMetapage({\n\tdefinition: metapageDefinition,\n\trootDiv: document.getElementById('metapage-container')\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This code can be adapted for any framework as it is plain javascript with only a single npm dependency (the core ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/@metapages/metapage",children:"@metapages/metapage"})," module)"]}),"\n",(0,s.jsx)(n.p,{children:"In this example you can get and set inputs and outputs, allowing interaction with the main page:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <style>\n      * {\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n      }\n\n      body {\n        width: 100vw;\n        height: 100vh;\n      }\n\n      iframe {\n        overflow: hidden;\n        border: 0;\n        height: 100%;\n        width: 100%;\n      }\n    </style>\n  </head>\n\n  <body>\n    <div style="width: 100%; height: 100%" id="metapage-container"></div>\n\n    <script type="module">\n      // the only function you need to import to render a metapage\n      import { renderMetapage } from "https://cdn.jsdelivr.net/npm/@metapages/metapage@1.8.15";\n\n      // download a metapage definition from metapage.io\n      // or just use your own definition JSON\n      const response = await fetch("https://metapage.io/m/87ae11673508447e883b598bf7da9c5d/metapage.json");\n      const metapageDefinition = await response.json();\n\n      // handle metapage outputs\n      const onOutputs = (outputs) => {\n        // do something with the outputs\n        console.log("outputs", outputs);\n      };\n      // set input values with the provided setInputs function\n      // dispose removes all event listeners and unloads the metapage\n      const { setInputs, dispose } = await renderMetapage({\n        definition: metapageDefinition,\n        onOutputs,\n        rootDiv: document.getElementById("metapage-container"),\n        options: {\n          hideBorder: true,\n          hideFrameBorders: true,\n          hideOptions: true,\n          hideMetaframeLabels: true,\n        },\n      });\n    <\/script>\n  </body>\n</html>\n\n'})}),"\n",(0,s.jsx)(n.p,{children:"Will render this in the page (with a docker container and interactive visualization):"}),"\n",(0,s.jsx)("iframe",{scrolling:"yes",allow:"fullscreen *; camera *; speaker *;",style:{width:"100%",height:"370px",overflow:"hidden"},src:"https://metapage.io/m/87ae11673508447e883b598bf7da9c5d/embed"}),"\n",(0,s.jsxs)(n.p,{children:["(",(0,s.jsx)(n.a,{href:"https://metapage.io/m/87ae11673508447e883b598bf7da9c5d",children:"see here"})," for the original)"]}),"\n",(0,s.jsx)(n.h2,{id:"4d58288979954add8d83b1f337c919b1",children:(0,s.jsx)(n.strong,{children:"Embed metapages in your site (links to code examples)"})}),"\n",(0,s.jsx)(n.p,{children:"Embedding a metapage/frame means you get a complete, functional, already-deployed piece of software that takes a few lines of code to add to your own app."}),"\n",(0,s.jsx)(n.p,{children:"One way to think about embedding metapages is that each metaframe is a web component with inputs and outputs."}),"\n",(0,s.jsx)(n.p,{children:"You can wire them up together with the metapage library, or even stitch them together yourself in your own app, if that makes more sense for you use cases."}),"\n",(0,s.jsx)(n.p,{children:"Developer advantages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Embed visual modules like the ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/monaco-editor",children:"monaco code editor"})," with a few lines of code","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/monaco-editor",children:"monaco module"})," requires various complex and specific workarounds for various build tools (",(0,s.jsx)(n.a,{href:"https://github.com/microsoft/monaco-editor/blob/main/docs/integrate-esm.md",children:"webpack"}),", ",(0,s.jsx)(n.a,{href:"https://github.com/vitejs/vite/discussions/1791",children:"vite"}),", etc)"]}),"\n",(0,s.jsx)(n.li,{children:"The component is only loaded when shown to the user, so no assets are downloaded if the component is not used in your app"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"metaframes"})," in the ",(0,s.jsx)(n.code,{children:"metapage"})," are iframes, and communicate using the web standard ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage",children:"postMessage"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["This means they are security isolated:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If there is malicious code in a metaframe, it is very difficult for it to interfere with your main app code, as the only way to access the parent (your app) is via the secured ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage",children:"postMessage"})," system (metapages control who can send messages)"]}),"\n",(0,s.jsx)(n.li,{children:"The code running in metaframes"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("div",{className:"custom-docunotion-row"}),"\n",(0,s.jsx)(n.h2,{id:"0ba26708b1eb4296bab40fd139307271",children:"Links to code example"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/docs/embed-metaframe",children:"A single metaframe:"})}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart TD\n    subgraph test [your-site.com]\n        direction LR\n        style js fill:#fff,stroke:#fff,stroke-width:2px\n        style metaframe fill:#fff,stroke:#32AEE4,stroke-width:2px\n        js[your javascript] <--\x3e |messages| metaframe[Single Metaframe]\n    end"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/docs/embed-metapage",children:"A single metapage:"})}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart LR\n    subgraph test [your-site.com]\n        direction TB\n\n        style js fill:#fff,stroke:#fff,stroke-width:2px\n        style mf1 fill:#fff,stroke:#32AEE4,stroke-width:2px\n        style mf2 fill:#fff,stroke:#32AEE4,stroke-width:2px\n        style mf3 fill:#fff,stroke:#32AEE4,stroke-width:2px\n\n        subgraph metapage [metapage]\n\n            mf1[metaframe 1] --\x3e mf2[metaframe 2]\n            mf2 --\x3e mf3[metaframe 3]\n            mf1 --\x3e mf3\n        end\n        js[ javascript] <--\x3e |messages| metapage\n    end"}),"\n",(0,s.jsx)(n.p,{children:"Metapage plus editor:"}),"\n",(0,s.jsx)(n.p,{children:":::\u2755"}),"\n",(0,s.jsx)(n.p,{children:"Embedding the editor and gallery is on our roadmap"}),"\n",(0,s.jsx)(n.p,{children:":::"}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart LR\n    style metaframes fill:#fff,stroke:#32AEE4,stroke-width:2px\n    style metapages fill:#fff,stroke:#32AEE4,stroke-width:2px\n    style mf1 fill:#fff,stroke:#32AEE4,stroke-width:2px\n    style mf2 fill:#fff,stroke:#32AEE4,stroke-width:2px\n    style mf3 fill:#fff,stroke:#32AEE4,stroke-width:2px\n\n    subgraph test [your-site.com]\n        direction LR\n\n        subgraph gallery [gallery.metapage.io]\n            direction LR\n            metaframes[...metaframes]\n            metapages[...metapages]\n        end\n        subgraph metapage [metapage]\n\n            mf1[metaframe 1] --\x3e mf2[metaframe 2]\n            mf2 --\x3e mf3[metaframe 3]\n            mf1 --\x3e mf3\n        end\n\n        gallery --\x3e |add from gallery| metapage\n    end"}),"\n",(0,s.jsx)(n.h2,{id:"1ae018579bb580c1a721e02051d78875",children:"Navigate Concepts"}),"\n",(0,s.jsx)(n.mermaid,{value:'\nflowchart LR\n  embedmf["Embed a metaframe"]\n  embedmp["Embed metapages"]\n  embedmf --\x3e embedmp\n  click embedmf "/docs/embed-metaframe"\n  click embedmp "/docs/embed"\n  style embedmp fill:#fff,stroke:#999999,stroke-width:2px,color:#000\n'})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);